# telegram_notifier.py
from typing import Dict, Any
from aiogram import Bot
from logger import get_logger
import config

logger = get_logger()


async def send_analysis_result(bot: Bot, analysis_data: Dict[str, Any]):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ –∑–∞–¥–∞–Ω–Ω—ã–π —á–∞—Ç Telegram.

    Args:
        bot (Bot): –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ aiogram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
        analysis_data (Dict[str, Any]): –°–ª–æ–≤–∞—Ä—å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–∞–Ω–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞.
            –û–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–∏: "channel_title", "message_link", "original_message",
            "summary", "sentiment", "hashtags_formatted".
    """
    if not config.TELEGRAM_CHAT_ID:
        logger.warning(
            "TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞."
        )
        return

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ö–µ—à—Ç–µ–≥
    sentiment_to_hashtag = {
        "–ü–æ–∑–∏—Ç–∏–≤–Ω–∞—è": "#–ø–æ–∑–∏—Ç–∏–≤–Ω–∞—è_–Ω–æ–≤–æ—Å—Ç—å",
        "–ù–µ–≥–∞—Ç–∏–≤–Ω–∞—è": "#–Ω–µ–≥–∞—Ç–∏–≤–Ω–∞—è_–Ω–æ–≤–æ—Å—Ç—å",
        "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è": "#–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∞—è_–Ω–æ–≤–æ—Å—Ç—å",
    }
    sentiment_hashtag = sentiment_to_hashtag.get(analysis_data["sentiment"], "#–Ω–æ–≤–æ—Å—Ç—å")

    try:
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
        message_text = (
            f"üìä **–ê–Ω–∞–ª–∏–∑ –∏–∑ ¬´{analysis_data['channel_title']}¬ª**\n\n"
            f"**üìù –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:**\n{analysis_data['summary']}\n\n"
            f"üîó [–û—Ä–∏–≥–∏–Ω–∞–ª]({analysis_data['message_link']})\n\n"
            f"{analysis_data['hashtags_formatted']}\n"
            f"{sentiment_hashtag}"
        )

        await bot.send_message(
            chat_id=config.TELEGRAM_CHAT_ID,
            text=message_text,
            parse_mode="Markdown",
            disable_web_page_preview=True,
        )
        logger.info(
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è {analysis_data['message_link']} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω."
        )

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞: {e}")
